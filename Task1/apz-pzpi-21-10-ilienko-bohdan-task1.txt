1.1 Передумови

На сьогоднішній день безпілотні літальні апарати є дуже затребуваними засобами в різних сферах діяльності, таких як археологія, мистецтво, розваги, сфера безпеки та моніторингу, а також у військовій сфері. Тому попит на використання дронів є дуже високим. 
Проблемою людей, які хочуть використовувати дрони, є те, що вони можуть бути достатньо дорогими, тому не всі можуть їх собі дозволити. Проблему таких людей можна вирішити за допомогою системи оренди дронів, яка буде надавати їм безпілотні літальні апарати за меншу суму та на визначений проміжок часу.
Проблемою орендаторів, які мають БПЛА та хочуть надавати послуги оренди, є те, що вони хочуть мати зручну онлайн платформу, де вони змогли б швидко надавати послуги оренди дронів.
Саме це стало передумовою для створення програмної системи для оренди та керування дронами.

1.2 Бізнес-можливості

На ринку є достатня кількість конкурентів у сфері надання БПЛА в оренду. Один з таким має назву booqable.com. Дана програмна система надає послуги оренди в будь якій сфері. Але якщо ми проаналізуємо саме послуги оренди дронів на даному сервісі, то маємо, що він обробляє замовлення користувачів, відстежує запаси товарів, має вбудовану платіжну систему. Але основним недоліком даної системи є те, що вона ніяк не зв’язує орендаря з орендатором, тобто орендатор не можу відстежити поточний стан свого наданого товару.
Прикладом ще одного конкурента може бути coptrz.com. Даний сервіс надає новіші моделі БПЛА та сучасні технології для їх керування. Але все ще залишається проблема орендаторів. В даній програмній системі не передбачено те, що буть який власник дронів може надати свої апарати в оденду.
Наша програмна система орієнтована на ринок послуг, а саме на ринок оренди безпілотних літальних апаратів.
Монетизація в нашій системі відбувається власне через надання послуг оренди користувачам, а також через систему підписки користувачів на різних рівнях, для отримання додаткового функціоналу.

2.1 Окреслення концепції

Наша програмна система надає послуги оренди безпілотних літальних апаратів користувачам, з подальшою можливістю зручного керування БПЛА, відстеження в реальному часі. Орендатори мають можливість викладати свої апарати в систему для надання послуг оренди. Наш продукт доступний через мобільний додаток та веб-інтерфейс, забезпечуючи доступність та зручність користування незалежно від місця проживання користувачів.
Основною метою створення нашого програмного продукту є вирішення основних проблем орендарів та орендаторів дронів.
Наша система призначена для забезпечення простого та інтуїтивно зрозумілого інтерфейсу для користувачів, щоб вони могли легко знайти для себе той апарат, який їм потрібен.

2.2 Головна функціональність

MF-1: Реєстрація та авторизація в системі з роллю орендаря або орендатора.
MF-2: Система підписок різних рівнів для забезпечення додаткового функціоналу.
MF-3: Створення оголошень про оренду. 
MF-4: Вибір підходящого апарату з потрібними характеристиками, ціною з можливістю запрати апарат в найближчому зручному місці. Визначення строків оренди. Відстеження статусу оренди.
MF-5: Відображення місцезнаходження апарату в реальному часі. Зберігання та перегляд історії маршрутів БПЛА. Експорт історії маршрутів в зручному форматі.
MF-6: Онлайн оплата за оренду.
МF-7: Аутентифікація пристроїв за допомогою сертифікатів або токенів. Захист від несанкціонованого доступу до управління дроном.
MF-8: Система адміністрування – схвалення орендаторів адміністраторами, взаємодія з орендаторами, взаємодія з орендарями щодо помилок та проблем.

3.1 Рамки первинного випуску

Далі наведено функціональність кожної складової системи, яка буде реалізована в первинному випуску програмного продукту.
Серверна частина:
- Безпека та захист даних користувачів. Особисті дані користувачів не будуть доступні адміністраторам, паролі будуть зберігатися в хешованому вигляді, авторизація буде відбуватися через згенерований токен доступу. Також аутентифікація дронів за допомогою сертифікатів або токенів та захист від несанкціонованого доступу до управління БПЛА.
- Розподілення користувачів за ролями. В системі користувачі мають наступні ролі: орендар, орендатор, адміністратор системи. Користувачі будуть обмежені в функціоналі своїми ролями.
- Адміністрування системи. Адміністратору системи доступні функції адміністрування системи, а саме: функції експорту та імпорту даних, управління орендами, управління даними користувачів.
- Система оформлення оренди на дрони. Математичні методи для підрахунку вартості оренди.
- Система знижок при оформленні оренди на довгий строк.
- Система створення пропозицій оренди.
- Система підписок різного рівня. Надання додаткового функціоналу користувачу відповідно до його рівня підписки.
- Збереження даних про місцерозташування дрону в реальному часі. Збереження історії маршрутів за весь період користування.
Клієнтська частина:
- Авторизація та реєстрація. Сервіс повинен надавати інтерфейс для авторизації та реєстрації користувачів.
- Локалізація та інтернаціоналізація системи. Інтерфейс користувача має бути перекладеним на англійську та українську мови. А також підтримувати роботу з усіма часовими поясами, та валютами США та України.
- Інтерфейс користувача для створення пропозиції оренди.
- Інтерфейс користувача для оформлення оренди на визначений строк.
- Графічне відображення місцезнаходження апарату на карті.
- Графічне відображення історії маршруту БПЛА на карті у визначений момент часу.
- Панель адміністрування. Адміністратору системи надається доступ до деяких даних користувача, управління експортом та імпортом даних. Адміністратор має схвалити нового орендатора в системі для його подальшої можливості користування сервісом в ролі орендатора.
- Особистий кабінет користувача. Користувач може управляти своїми особистими даними, переглядати історії оренди та історії маршрутів БПЛА.
Мобільний застосунок:
- Авторизація та реєстрація. Мобільний застосунок повинен надавати можливість авторизації та реєстрації користувачів.
- Особистий кабінет користувача. Мобільний застосунок надає орендарям та орендаторам інтерфейс користувача для перегляду, редагування своїх даних, перегляду історії оренди та маршрутів.
- Керування дроном та корегування його маршруту.
- Відстеження апарату на мапі в реальному часі.
IoT/Smart Device:
- Збір та передача даних. Спеціальні датчики мають надавати користувачам дані щодо місцезнаходження дрону, його висоти, швидкості.
- Здійснення контролю. У адміністраторів буде функціонал, щоб виконати примусову посадку/повернення на базу.

3.2 Рамки наступних випусків

У подальших випусках програмного продукту будуть реалізовані функції:
- Оплата через сервіс оплати.
- Більше функцій щодо підписки на сервіс, персональні тарифи для постійних користувачів.

4.3 Робоче середовище

Для реалізації проєкту будуть застосовані наступні технології:
- Архітектура: програмна система буде побудована на мікросервісній архітектурі. Кожна частина функціональності буде реалізована як окремий мікросервіс для кращої масштабованості та управління. 
- NestJS: основний фреймворк для побудови мікросервісів. RabbitMQ: черги повідомлень для зв'язку між мікросервісами
- Для серверної частини будуть використані такі фреймворки та бібліотеки: Node.js – для створення серверу, JWT - аутентифікація за допомогою JSON Web Token, TypeORM – ORM для взаємодії з PostgreSQL.
- Для зберігання даних була обрана PostgreSQL, як основна реляційна база даних. MongoDB – як нереляційна база даних для зберігання певних типів даних.
- Для клієнтської частини будуть використані такі фреймворки та бібліотеки: React – основний фреймворк для створення інтерфейсу користувача, i18next – бібліотека для локалізації інтерфейсу.
- Для створення мобільного додатку була обрана мова програмування Kotlin.
- Для написання програмного забезпечення для IoT пристрою була обрана мова програмування C++.
Нижче зазначу головні вимоги та потреби системи:
- Надійність: система повинна забезпечувати стійкість до помилок та оперативне відновлення в разі аварій, забезпечуючи безперебійну роботу.
- Відмовостійкість: система має бути стійкою до виникнення помилок та здатною відновлюватися після збоїв для забезпечення неперервної роботи.
- Доступність: користувачі повинні мати можливість використовувати систему протягом робочого часу без значних перерв у роботі.
- Масштабованість: система повинна бути гнучкою та здатною зростати або зменшуватися в залежності від потреб користувачів, забезпечуючи ефективне функціонування в будь-яких умовах.
- Цілісність: даним та інформації користувачів повинна гарантуватися цілісність, щоб уникнути втрати або порушення інформації.
- Продуктивність: система має забезпечувати швидке та ефективне виконання завдань, забезпечуючи оперативний доступ до даних та виконання потрібних операцій.